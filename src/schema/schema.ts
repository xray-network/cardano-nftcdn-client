/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export type paths = {
  "/image": {
    /**
     * Image
     * @description Get raw image by fingerprint
     */
    get: {
      parameters: {
        query?: {
          /** @description From which CIP to select the image */
          select?: "cip25" | "cip26" | "cip68";
          /** @description Image size */
          size?: number;
          /** @description Crop image to square */
          crop?: boolean;
        };
        path: {
          /** @description Token fingerprint */
          fingerprint: string;
        };
      };
      responses: {
        /** @description Image */
        200: {
          content: {
            "": string;
          };
        };
        /** @description Not found */
        404: {
          content: {
            "text/html": string;
          };
        };
      };
    };
  };
  "/metadata/{fingerprint}": {
    /**
     * Metadata
     * @description Get metadata by fingerprint
     */
    get: {
      parameters: {
        query?: {
          /** @description Raw image URL in metadata */
          raw?: boolean;
        };
        path: {
          /** @description Token fingerprint */
          fingerprint: string;
        };
      };
      responses: {
        /** @description Metadata */
        200: {
          content: {
            "application/json": components["schemas"]["Metadata"];
          };
        };
        /** @description Not found */
        404: {
          content: {
            "text/html": string;
          };
        };
      };
    };
  };
  "/metadata": {
    /**
     * Metadata Bulk
     * @description Bulk metadata by fingerprint
     */
    post: {
      requestBody?: {
        content: {
          "application/json": {
            /** @description Token fingerprints */
            fingerprints?: string[];
            /** @description Raw image URL in metadata */
            raw?: boolean;
          };
        };
      };
      responses: {
        /** @description Metadata */
        200: {
          content: {
            "application/json": components["schemas"]["Metadata"][];
          };
        };
        /** @description Bad request */
        400: {
          content: {
            "text/html": string;
          };
        };
      };
    };
  };
  "/assets": {
    /**
     * Assets
     * @description Get assets by query
     */
    get: {
      parameters: {
        query?: {
          /** @description Filter by fingerprint */
          fingerprint?: string;
          /** @description Filter by policy_id */
          policy_id?: string;
          /** @description Filter by asset_name */
          asset_name?: string;
          /** @description Filter by asset_name_ascii */
          asset_name_ascii?: string;
          /** @description Limit of results */
          limit?: number;
          /** @description Offset of results */
          offset?: number;
        };
      };
      responses: {
        /** @description Assets */
        200: {
          content: {
            "application/json": components["schemas"]["Asset"][];
          };
        };
        /** @description Not found */
        404: {
          content: {
            "text/html": string;
          };
        };
      };
    };
  };
  "/ipfs": {
    /**
     * IPFS
     * @description Get IPFS file by CID
     */
    get: {
      parameters: {
        path: {
          /** @description IPFS CID */
          _cid: string;
        };
      };
      responses: {
        /** @description IPFS file */
        200: {
          content: {
            "": string;
          };
        };
        /** @description Not found */
        404: {
          content: {
            "text/html": string;
          };
        };
      };
    };
  };
};

export type webhooks = Record<string, never>;

export type components = {
  schemas: {
    Metadata: {
      fingerprint?: string;
      ref_fingerprint?: string | null;
      policy_id?: number;
      asset_name?: string;
      asset_name_ascii?: string;
      asset_name_formatted?: string;
      asset_name_full?: string;
      asset_name_label?: number | null;
      asset_name_label_type?: number | null;
      decimals?: number;
      quantity?: string;
      image?: string | null;
      metadata?: {
        cip25?: any;
        cip26?: {
          fingerprint?: string;
          policy_id?: string;
          asset_name?: string | null;
          subject?: string;
          policy?: string | null;
          name?: string | null;
          description?: string | null;
          ticker?: string | null;
          url?: string | null;
          logo?: unknown;
        };
        cip27?: any;
        cip68?: any;
      };
    };
    Asset: {
      fingerprint?: string;
      ref_fingerprint?: string | null;
      policy_id?: string;
      asset_name?: string;
      asset_name_ascii?: string;
      asset_name_formatted?: string;
      asset_name_full?: string;
      asset_name_label?: number | null;
      asset_name_label_type?: string | null;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
};

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export type operations = Record<string, never>;
